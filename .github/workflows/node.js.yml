name: Deploy Docker MINI-SIT

on:
  push: main

env:
  SERVER: ubuntu@54.206.115.93
  HOST: 54.206.115.93 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIK0TXNCTZUNVHN4HdQjbxnyOUdP+FCgbfu7RbUugzsCW ubuntu@ip-172-31-32-107
  DIRECTORY: /home/ubuntu/projects/vue-porfolio
  ENVIRONMENT: DEV
  PREVIEW: https://finn-porfolio.com
  REGISTRY: docker.io
  IMAGE_NAME: 170297/finnpham
  IMAGE_TAG: latest
  SERVICE_NAME: partner-rocket-gaming

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: ./Dockerfile.${{ env.ENVIRONMENT }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Add hosts
        run: echo "${{ env.HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy Docker image and restart container
        run: |
          ssh ${{ env.SERVER }} "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          ssh ${{ env.SERVER }} "cd ${{ env.DIRECTORY }} && docker compose up -d ${{ ENV.SERVICE_NAME }} --force-recreate"
