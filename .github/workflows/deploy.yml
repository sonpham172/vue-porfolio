name: Deploy Docker portfolio

on:
  push:
    branches:
      - main

env:
  SERVER: ubuntu@ec2-52-65-66-136.ap-southeast-2.compute.amazonaws.com
  HOST: ec2-52-65-66-136.ap-southeast-2.compute.amazonaws.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMVGFbaJ4/XA07el2hlvh2JkDYHfumV531VSXS8PTaRg
  ENVIRONMENT: DEV
  PREVIEW: https://finn-porfolio.com
  REGISTRY: docker.io
  IMAGE_NAME: 170297/finnpham
  IMAGE_TAG: latest
  SERVICE_NAME: partner-rocket-gaming

jobs:
  checkout-code:
    name: Checkout code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

  check:
    needs: [checkout-code]
    name: tsc + Test
    runs-on: ubuntu-latest
    outputs:
      IS_PR: ${{github.event_name == 'push' && github.event.head_commit.committer.name == 'GitHub'}}
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - run: npm install
      - run: npm run type-check


  build-push:
    needs: [check]
    name: Build and Push Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: ./Dockerfile.${{ env.ENVIRONMENT }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Add hosts
        run: echo "${{ env.HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy Docker image and restart container
        run: |
          ssh ${{ env.SERVER }} "docker stop ${{ env.SERVICE_NAME }} && docker run --rm --pull=always -p 3000:4173 -d --name ${{ env.SERVICE_NAME }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"